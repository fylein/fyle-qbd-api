# Generated by Django 3.1.14 on 2022-11-30 10:17

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('employee_email', models.EmailField(help_text='Email id of the Fyle employee', max_length=255)),
                ('employee_name', models.CharField(help_text='Name of the Fyle employee', max_length=255, null=True)),
                ('category', models.CharField(blank=True, help_text='Fyle Expense Category', max_length=255, null=True)),
                ('sub_category', models.CharField(blank=True, help_text='Fyle Expense Sub-Category', max_length=255, null=True)),
                ('project', models.CharField(blank=True, help_text='Project', max_length=255, null=True)),
                ('expense_id', models.CharField(help_text='Expense ID', max_length=255, unique=True)),
                ('org_id', models.CharField(help_text='Organization ID', max_length=255, null=True)),
                ('expense_number', models.CharField(help_text='Expense Number', max_length=255)),
                ('claim_number', models.CharField(help_text='Claim Number', max_length=255, null=True)),
                ('amount', models.FloatField(help_text='Home Amount')),
                ('currency', models.CharField(help_text='Home Currency', max_length=5)),
                ('foreign_amount', models.FloatField(help_text='Foreign Amount', null=True)),
                ('foreign_currency', models.CharField(help_text='Foreign Currency', max_length=5, null=True)),
                ('settlement_id', models.CharField(help_text='Settlement ID', max_length=255, null=True)),
                ('reimbursable', models.BooleanField(default=False, help_text='Expense reimbursable or not')),
                ('state', models.CharField(help_text='Expense state', max_length=255)),
                ('vendor', models.CharField(blank=True, help_text='Vendor', max_length=255, null=True)),
                ('cost_center', models.CharField(blank=True, help_text='Fyle Expense Cost Center', max_length=255, null=True)),
                ('corporate_card_id', models.CharField(blank=True, help_text='Corporate Card ID', max_length=255, null=True)),
                ('purpose', models.TextField(blank=True, help_text='Purpose', null=True)),
                ('report_id', models.CharField(help_text='Report ID', max_length=255)),
                ('billable', models.BooleanField(default=False, help_text='Expense billable or not')),
                ('file_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), help_text='File IDs', null=True, size=None)),
                ('spent_at', models.DateTimeField(help_text='Expense spent at', null=True)),
                ('approved_at', models.DateTimeField(help_text='Expense approved at', null=True)),
                ('expense_created_at', models.DateTimeField(help_text='Expense created at')),
                ('expense_updated_at', models.DateTimeField(help_text='Expense created at')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated at')),
                ('fund_source', models.CharField(help_text='Expense fund source', max_length=255)),
                ('verified_at', models.DateTimeField(help_text='Report verified at', null=True)),
                ('custom_properties', models.JSONField(null=True)),
                ('paid_on_xero', models.BooleanField(default=False, help_text='Expense Payment status on Xero')),
                ('tax_amount', models.FloatField(help_text='Tax Amount', null=True)),
                ('tax_group_id', models.CharField(help_text='Tax Group ID', max_length=255, null=True)),
            ],
            options={
                'db_table': 'expenses',
            },
        ),
    ]
